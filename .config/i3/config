# This file has been auto-generated by i3-config-wizard(1).
# It will not be overwritten, so edit it as you like.
#
# Should you change your keyboard layout some time, delete
# this file and re-run i3-config-wizard(1).

# i3 config file (v4)
#
# Please see https://i3wm.org/docs/userguide.html for a complete reference!

set $mod Mod1

# colors
set $bg-color 		#2f343f
set $urgent-bg-color	#E53935
set $text-color		#F3F4F5

# programms used
set $terminal st
set $filemanager ranger
set $browser qutebrowser



# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
font pango:System San Francisco Display 10 

# This font is widely installed, provides lots of unicode glyphs, right-to-left
# text rendering and scalability on retina/hidpi displays (thanks to pango).
#font pango:DejaVu Sans Mono 8

# Before i3 v4.8, we used to recommend this one as the default:
# font -misc-fixed-medium-r-normal--13-120-75-75-C-70-iso10646-1
# The font above is very space-efficient, that is, it looks good, sharp and
# clear in small sizes. However, its unicode glyph coverage is limited, the old
# X core fonts rendering does not support right-to-left and this being a bitmap
# font, it doesn’t scale on retina/hidpi displays.

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# start a terminal
bindsym $mod+Return exec i3-sensible-terminal

# kill focused window
bindsym $mod+Shift+semicolon kill

# start dmenu (a program launcher)
#bindsym $mod+e exec rofi -show run -lines 3 -eh 2 -with 100 -padding 200 -opacity "85" -bw 0 -bc "$bg-color" -bg "$bg-color" -fg "$text-color" -hlbg "$bg-color" -hlfg "#9575CD" -font "System San Francisco Display 18"

# There also is the (new) i3-dmenu-desktop which only displays applications
# shipping a .desktop file. It is a wrapper around dmenu, so you need that
# installed.
# bindsym $mod+d exec --no-startup-id i3-dmenu-desktop

# change focus
bindsym $mod+h focus left
bindsym $mod+t focus down
bindsym $mod+n focus up
bindsym $mod+s focus right

# move focused window
bindsym $mod+Shift+h move left
bindsym $mod+Shift+t move down
bindsym $mod+Shift+n move up
bindsym $mod+Shift+s move right

# split in horizontal orientation
bindsym $mod+d split h

# split in vertical orientation
bindsym $mod+k split v

# enter fullscreen mode for the focused container
bindsym $mod+u fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+o layout stacking
bindsym $mod+comma layout tabbed
bindsym $mod+period layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent

# focus the child container
#bindsym $mod+d focus child

set $k_ws1 parenleft 
set $k_ws2 parenright 
set $k_ws3 braceright 
set $k_ws4 plus 
set $k_ws5 braceleft 
set $k_ws6 bracketright 
set $k_ws7 bracketleft 
set $k_ws8 exclam 
set $k_ws9 equal 
set $k_ws10 asterisk 

set $name_ws1 "1: Terminals "
set $name_ws2 "2: Chrome "
set $name_ws3 "3: Coding "
set $name_ws4 "4: Remote "
set $name_ws5 "5: Docker "
set $name_ws6 "6: Tests "
set $name_ws7 "7: Files "
set $name_ws8 "8: Music "


# switch to workspace
bindsym $mod+$k_ws1 workspace $name_ws1
bindsym $mod+$k_ws2 workspace $name_ws2
bindsym $mod+$k_ws3 workspace $name_ws3
bindsym $mod+$k_ws4 workspace $name_ws4
bindsym $mod+$k_ws5 workspace $name_ws5
bindsym $mod+$k_ws6 workspace $name_ws6
bindsym $mod+$k_ws7 workspace $name_ws7
bindsym $mod+$k_ws8 workspace $name_ws8
bindsym $mod+$k_ws9 workspace 9
bindsym $mod+$k_ws10 workspace 10

# move focused container to workspace
bindsym $mod+Shift+$k_ws1 move container to workspace $name_ws1
bindsym $mod+Shift+$k_ws2 move container to workspace $name_ws2
bindsym $mod+Shift+$k_ws3 move container to workspace $name_ws3
bindsym $mod+Shift+$k_ws4 move container to workspace $name_ws4
bindsym $mod+Shift+$k_ws5 move container to workspace $name_ws5
bindsym $mod+Shift+$k_ws6 move container to workspace $name_ws6
bindsym $mod+Shift+$k_ws7 move container to workspace $name_ws7
bindsym $mod+Shift+$k_ws8 move container to workspace $name_ws8
bindsym $mod+Shift+$k_ws9 move container to workspace 9
bindsym $mod+Shift+$k_ws10 move container to workspace 10

#move ws to other screen
mode "move-ws" {
  bindsym h move workspace to output left
  bindsym s move workspace to output right
  # back to normal: Enter or Escape
  bindsym Return mode "default"
  bindsym Escape mode "default"
}

bindsym $mod+m mode "move-ws"


# assignment of window-classes to workspaces
assign [class="Google-chrome"] $name_ws2
assign [class="Remmina"] $name_ws4
assign [title="ranger"] $name_ws7



# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym h resize shrink width 5 px or 5 ppt
        bindsym t resize grow height 5 px or 5 ppt
        bindsym n resize shrink height 5 px or 5 ppt
        bindsym s resize grow width 5 px or 5 ppt

        # back to normal: Enter or Escape
        bindsym Return mode "default"
        bindsym Escape mode "default"
}

bindsym $mod+p mode "resize"


#               border            background        text        indicator
client.urgent   $urgent-bg-color  $urgent-bg-color  $text-color #00FF00
client.focused  $bg-color         $bg-color         $text-color #00FF00


# Start i3bar to display a workspace bar (plus the system information i3status
# finds out, if available)
bar {
        status_command i3status
        font xft:Cousine, FontAwesome 12
}

# bindings for calling programms fast
bindsym $mod+b exec $browser

# bindings for audio volume
set $sink `pactl list short sinks | grep RUNNING | cut -f1`
bindsym mod4+v exec --no-startup-id pactl set-sink-volume $sink -5%   
bindsym mod4+shift+v exec --no-startup-id pactl set-sink-volume $sink +5%   
bindsym mod4+m exec --no-startup-id pactl set-sink-mute $sink toggle

# reload the configuration file
bindsym $mod+Shift+j reload

# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+p restart

# System-functions dialog, e.g. reboot, shutdown
#bindsym $mod+Shift+x exec /home/pschoe/.scripts/system-functions.sh "Which action shall I perform?"

mode "system" {
        # These bindings trigger as soon as you enter the system-mode

        bindsym r exec confirm-prompt "Do you want to reboot the Pc?" "systemctl reboot"
        bindsym s exec confirm-prompt "Do you want to shutdown the Pc?" "systemctl poweroff"
        bindsym l exec confirm-prompt "Do you want to end the session" "i3-msg exit"

        # back to normal: Enter or Escape
        bindsym Return mode "default"
        bindsym Escape mode "default"
}
bindsym $mod+Shift+period mode "system"


bindsym $mod+e exec dmenu_run

# start ranger
bindsym mod4+r exec $terminal -t ranger $filemanager; workspace $name_ws7

# start remmina
bindsym mod4+shift+r exec remmina

# starting IDEs
bindsym mod4+i exec intellij-idea-community
bindsym mod4+e exec eclipse
bindsym mod4+p exec pycharm-community

# reload .Xresources
bindsym $mod+x exec xrdb ~/.Xdefaults

# shutdown 
set $msg_shutdown "Pc herunterfahren?"
set $cmd_shutdown "shutdown"
#bindsym $mod+shift+x exec confirm-prompt $msg_shutdown $cmd_shutdown

# screen positioning
exec_always xrandr --output VGA-0 --primary --mode 1280x1024 --pos 0x0 --rotate normal --output DVI-D-0 --mode 1280x1024 --pos 1280x0 --rotate normal --output HDMI-0 --off


# autostarts
  # starting 'compton' for transparency
exec_always compton
  # browser for music only
exec --no-startup-id i3-msg 'workspace $name_ws8; exec $browser'

# Backgroundimage
exec_always --no-startup-id feh --bg-scale /home/pschoe/Pictures/wallhaven-6.jpg
